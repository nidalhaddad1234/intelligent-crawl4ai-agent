services:
  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:0.6.3
    container_name: intelligent_crawl4ai_chromadb
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    volumes:
      - chromadb_data:/chroma/chroma
    ports:
      - "8000:8000"
    networks:
      - ai_network
    restart: unless-stopped

  # Redis for session management
  redis:
    image: redis:7-alpine
    container_name: intelligent_crawl4ai_redis
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai_network
    restart: unless-stopped

  # PostgreSQL for persistent data storage
  postgres:
    image: postgres:15
    container_name: intelligent_crawl4ai_postgres
    environment:
      - POSTGRES_DB=intelligent_scraping
      - POSTGRES_USER=scraper_user
      - POSTGRES_PASSWORD=secure_password_123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../scripts/init_db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - ai_network
    restart: unless-stopped

  # Web UI Server with reduced memory requirements
  web-ui:
    image: python:3.11-slim
    command: >
      bash -c "
      echo 'üöÄ Starting Web UI Server...' &&
      apt-get update -qq && apt-get install -y -qq curl gcc && 
      echo 'üì¶ Installing minimal dependencies...' &&
      pip install --no-cache-dir fastapi uvicorn aiofiles &&
      pip install --no-cache-dir httpx redis asyncpg chromadb &&
      pip install --no-cache-dir ollama crawl4ai &&
      echo 'üåê Starting FastAPI server...' &&
      cd /app &&
      python -u web_ui_server.py
      "
    container_name: intelligent_crawl4ai_web_ui
    working_dir: /app
    environment:
      - OLLAMA_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=deepseek-coder:1.3b
      - CHROMADB_URL=http://chromadb:8000
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://scraper_user:secure_password_123@postgres:5432/intelligent_scraping
      - DATABASE_TYPE=postgresql
      - BROWSER_POOL_URLS=http://browser-pool-1:3000,http://browser-pool-2:3000
      - WEB_HOST=0.0.0.0
      - WEB_PORT=8888
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app:/app/src
      - LOG_LEVEL=INFO
    volumes:
      - ../../ai_core:/app/ai_core:ro
      - ../../src:/app/src:ro
      - ../../static:/app/static:ro
      - ../../data:/app/data
      - ../../web_ui_server.py:/app/web_ui_server.py:ro
      - ../../requirements.txt:/app/requirements.txt:ro
      - ../../config:/app/config:ro
    depends_on:
      - chromadb
      - redis
      - postgres
    networks:
      - ai_network
    ports:
      - "8888:8888"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G



  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: intelligent_crawl4ai_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - ai_network
    restart: unless-stopped

volumes:
  chromadb_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  grafana_data:
    driver: local

networks:
  ai_network:
    driver: bridge
