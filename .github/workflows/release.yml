name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-version-file: true
          output-file: false
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## üöÄ AI-First Intelligent Web Scraping Agent
            
            ### What's Changed
            ${{ steps.changelog.outputs.clean_changelog }}
            
            ### üê≥ Docker Images
            ```bash
            docker pull ghcr.io/${{ github.repository }}-web-ui:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}-agent:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}-workers:${{ github.ref_name }}
            ```
            
            ### üöÄ Quick Start
            ```bash
            # Using Docker Compose
            curl -O https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/docker/compose/docker-compose.yml
            docker-compose up -d
            
            # Or run locally
            pip install -r requirements.txt
            python web_ui_server.py
            ```
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/....${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}

  build-artifacts:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools build
          
      - name: Create source distribution
        run: |
          # Create a clean distribution
          mkdir -p dist
          
          # Package the AI core
          cd ai_core
          zip -r ../dist/ai_core_${{ github.ref_name }}.zip . -x "*.pyc" -x "__pycache__/*"
          cd ..
          
          # Create requirements bundle
          pip download -r requirements.txt -d dist/dependencies/
          cd dist
          tar -czf dependencies_${{ github.ref_name }}.tar.gz dependencies/
          rm -rf dependencies/
          cd ..
          
      - name: Create deployment package
        run: |
          # Create a deployment package with everything needed
          mkdir -p deploy_package
          cp -r ai_core deploy_package/
          cp -r static deploy_package/
          cp -r docker deploy_package/
          cp web_ui_server.py deploy_package/
          cp requirements.txt deploy_package/
          cp .env.example deploy_package/
          cp README.md deploy_package/
          cp LICENSE deploy_package/
          
          # Create deployment archive
          cd deploy_package
          zip -r ../dist/intelligent_crawl4ai_${{ github.ref_name }}.zip . -x "*.pyc" -x "__pycache__/*"
          cd ..
          
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/intelligent_crawl4ai_${{ github.ref_name }}.zip
          asset_name: intelligent_crawl4ai_${{ github.ref_name }}.zip
          asset_content_type: application/zip
          
      - name: Upload AI Core
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/ai_core_${{ github.ref_name }}.zip
          asset_name: ai_core_${{ github.ref_name }}.zip
          asset_content_type: application/zip
          
      - name: Upload Dependencies Bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/dependencies_${{ github.ref_name }}.tar.gz
          asset_name: dependencies_${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip
