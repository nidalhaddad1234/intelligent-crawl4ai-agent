name: Docker Build

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    strategy:
      matrix:
        include:
          - dockerfile: docker/Dockerfile.web-ui
            image: web-ui
          - dockerfile: docker/Dockerfile.agent
            image: agent
          - dockerfile: docker/Dockerfile.workers
            image: workers
            
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  docker-compose-test:
    name: Test Docker Compose
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create .env file
        run: |
          cp .env.example .env
          echo "OLLAMA_URL=http://ollama:11434" >> .env
          
      - name: Test docker-compose build
        run: |
          docker-compose -f docker/compose/docker-compose.yml build
          
      - name: Test docker-compose config
        run: |
          docker-compose -f docker/compose/docker-compose.yml config
          
      - name: Start services
        run: |
          docker-compose -f docker/compose/docker-compose.yml up -d
          sleep 30
          
      - name: Check service health
        run: |
          docker-compose -f docker/compose/docker-compose.yml ps
          curl -f http://localhost:8888/health || exit 1
          
      - name: View logs on failure
        if: failure()
        run: |
          docker-compose -f docker/compose/docker-compose.yml logs
          
      - name: Stop services
        if: always()
        run: |
          docker-compose -f docker/compose/docker-compose.yml down -v
